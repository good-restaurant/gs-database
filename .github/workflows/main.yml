name: GitLab Sync

on:
  push:
    branches: ['**']
    tags: ['**']

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mirror to GitLab via Cloudflare Access
        env:
          GITLAB_REPO: https://lab.i4624.info/good-restaurant/gs-database.git
          GITLAB_USERNAME: ${{ secrets.GITLAB_USERNAME }}
          GITLAB_TOKEN: ${{ secrets.MIRRORING_PAT }}
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_ACCESS_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_ACCESS_CLIENT_SECRET }}
          GITHUB_REF_TYPE: ${{ github.ref_type }}   # branch | tag
          GITHUB_REF_NAME: ${{ github.ref_name }}   # 브랜치명 또는 태그명
        run: |
          set -euo pipefail

          # 디버깅: 토큰 해시만 출력(값 유출 방지)
          printf '%s' "$GITLAB_TOKEN" | sha256sum

          BASE_URL="https://lab.i4624.info/"

          # Basic Auth (username:PAT → base64, 줄바꿈 제거)
          AUTH="$(printf '%s:%s' "$GITLAB_USERNAME" "$GITLAB_TOKEN" | base64 | tr -d '\n')"

          # -c 인자를 배열로 구성해 공백 보존
          GIT_ARGS=()
          GIT_ARGS+=(-c "http.${BASE_URL}.extraheader=Authorization: Basic ${AUTH}")
          GIT_ARGS+=(-c "http.${BASE_URL}.extraheader=CF-Access-Client-Id: ${CF_ACCESS_CLIENT_ID}")
          GIT_ARGS+=(-c "http.${BASE_URL}.extraheader=CF-Access-Client-Secret: ${CF_ACCESS_CLIENT_SECRET}")

          # 연결 확인 (필요시 아래 주석 해제)
          # GIT_CURL_VERBOSE=1 git "${GIT_ARGS[@]}" ls-remote "$GITLAB_REPO" || true
          git "${GIT_ARGS[@]}" ls-remote "$GITLAB_REPO" >/dev/null

          # remote 재설정
          git remote remove gitlab 2>/dev/null || true
          git remote add gitlab "$GITLAB_REPO"

          # 이벤트 유형별로 push 대상 결정
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            # 태그 이벤트: 해당 태그만 푸시
            TAG_NAME="${GITHUB_REF_NAME}"
            git "${GIT_ARGS[@]}" push gitlab "refs/tags/${TAG_NAME}:refs/tags/${TAG_NAME}" -o ci.skip --force-with-lease
          else
            # 브랜치 이벤트: 해당 브랜치만 푸시
            BRANCH="${GITHUB_REF_NAME}"
            git "${GIT_ARGS[@]}" push gitlab "${BRANCH}:${BRANCH}" -o ci.skip --force-with-lease
            # 필요 시 태그도 동시에 동기화
            git "${GIT_ARGS[@]}" push gitlab --tags -o ci.skip --force-with-lease
          fi
